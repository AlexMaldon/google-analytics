#!/usr/bin/env python

import os
import argparse
import json
import re
import inspector
import googleanalytics as ga
from googleanalytics import commands


def authenticated(fn):
    @inspector.wraps(fn)
    def authenticated_fn(arguments):
        if hasattr(arguments, 'identity'):
            identity = arguments.identity
        else:
            identity = None
        accounts = ga.authenticate(identity=identity, interactive=True, save=True)
        return fn(arguments, accounts)
    return authenticated_fn


@authenticated
def auth_command(arguments, accounts):
    if arguments.show: 
        print json.dumps(credentials.serialize(), indent=4)
    return accounts

def revoke_command(arguments, accounts):
    ga.revoke(arguments.identity)

@authenticated
def ls_command(arguments):
    """ analytics ls <identity> <acc> <prop> <profile> <columnsearch> """

    identifiers = arguments.identifiers

    while len(identifiers) < 5:
        identifiers.append(None)

    name = identifiers[0]
    tokens = ga.auth.keyring.get(name) or auth_command([name])
    commands.list(tokens, *identifiers)


arguments = argparse.ArgumentParser()
subparsers = arguments.add_subparsers()

auth = subparsers.add_parser('authorize')
auth.set_defaults(func=auth_command, 
    help="authorize the CLI to access to Google Analytics")
auth.add_argument('identity')
auth.add_argument('-s', '--show', action='store_true')

revoke = subparsers.add_parser('revoke')
revoke.add_argument('name', default='', nargs='?')
revoke.set_defaults(func=revoke_command, 
    help="revoke Google Analytics OAuth credentials")

ls = subparsers.add_parser('ls')
ls.add_argument('identifiers', default=[''], nargs='*')
ls.set_defaults(func=ls_command, 
    help="list Google Analytics accounts, web properties, profiles and data columns")


if __name__ == '__main__':
    args = arguments.parse_args()
    args.func(args)
