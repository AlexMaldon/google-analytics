#!/usr/bin/env python

import os
import argparse
import json
import re
import googleanalytics as ga
from googleanalytics import commands


def normalize_identification(identification):
    client_secret = False
    name = ''

    if len(identification) == 3:
        name, client_id, client_secret = identification
    elif len(identification) == 2:
        client_id, client_secret = identification
        name = client_id
    elif len(identification) == 1:
        client_id = os.environ
        name = identification[0]
    elif len(identification) == 0:
        if 'GOOGLE_ANALYTICS_CLIENT_ID' in os.environ \
            and 'GOOGLE_ANALYTICS_CLIENT_SECRET' in os.environ:
                client_id = os.environ
        else:
            name = raw_input('Human-readable account name: ')
            client_id = raw_input('Client ID: ')
            client_secret = raw_input('Client secret: ')
    else:
        raise ValueError()

    return dict(name=name, client_id=client_id, client_secret=client_secret)


def auth_command(arguments):
    if hasattr(arguments, 'identifiers'):
        identifiers = arguments.identifiers
    else:
        identifiers = arguments

    identification = normalize_identification(identifiers)

    tokens = ga.auth.authorize(**identification)
    accounts = ga.auth.authenticate(**tokens)

    if arguments.show: 
        print json.dumps(tokens, indent=4)

    return accounts


def revoke_command(arguments):
    return ga.utils.keyring.revoke(arguments.name)


def ls_command(arguments):
    """ analytics ls <name> <acc> <prop> <profile> <columnsearch> """

    identifiers = arguments.identifiers

    while len(identifiers) < 5:
        identifiers.append(None)

    name = identifiers[0]
    tokens = ga.auth.keyring.get(name) or auth_command([name])
    commands.list(tokens, *identifiers)


arguments = argparse.ArgumentParser()
subparsers = arguments.add_subparsers()

auth = subparsers.add_parser('auth')
auth.set_defaults(func=auth_command, 
    help="authenticate with Google Analytics")
auth.add_argument('identifiers', nargs='*')
auth.add_argument('-s', '--show', action='store_true')

revoke = subparsers.add_parser('revoke')
revoke.add_argument('name', default='', nargs='?')
revoke.set_defaults(func=revoke_command, 
    help="revoke Google Analytics OAuth credentials")

ls = subparsers.add_parser('ls')
ls.add_argument('identifiers', default=[''], nargs='*')
ls.set_defaults(func=ls_command, 
    help="list Google Analytics accounts, web properties, profiles and data columns")


if __name__ == '__main__':
    args = arguments.parse_args()
    args.func(args)
